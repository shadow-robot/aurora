# Copyright 2022-2023 Shadow Robot Company Ltd.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.

---
- name: Set server hostname variable and validate input variables
  hosts: server
  connection: local
  gather_facts: yes
  pre_tasks:
    - name: include products/common/validation role
      include_role:
        name: products/common/validation
      vars:
        playbook: "server_and_nuc_deploy"
    
    - name: Running playbook setup role
      include_role:
        name: installation/playbook_setup
      when: not skip_molecule_task|bool
  tasks:
    - name: Extract hostname from server
      set_fact:
        ansible_host: "{{ ansible_hostname }}"
      when: not skip_molecule_task|bool

- name: Add IP address of all hosts to computer that is running Ansible
  hosts: server
  connection: local
  gather_facts: yes
  tasks:
    - name: Running playbook setup role
      include_role:
        name: installation/playbook_setup
      when: not skip_molecule_task|bool
        
    - name: Add lines in /etc/hosts in computer that is running Ansible
      blockinfile:
        dest: /etc/hosts
        state: present
        block: |
          {{ item }} {{ hostvars[item].ansible_host }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ hostvars[item].ansible_host }}"
        # Allowing Ansible to modify /etc/hosts inside Docker containers
        unsafe_writes: yes
      with_items: "{{ groups.all }}"
      when: hostvars[item].ansible_host is defined
      become: yes

    - name: Delete previously known hosts to avoid an ssh error
      shell: |
        ssh-keygen -q -f "/home/{{ ansible_user_id }}/.ssh/known_hosts" -R {{ hostvars[item].ansible_host }}
        ssh-keygen -q -f "/home/{{ ansible_user_id }}/.ssh/known_hosts" -R '{{ item }}'
      changed_when: false
      ignore_errors: true
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.all | difference([inventory_hostname]) }}"

- name: Install Python 3
  import_playbook: ./install_python3.yml

- name: Check which hosts are available for server and control machine system Install
  hosts: all
  gather_facts: no
  tasks:
    - name: ping all the machines
      ping:
  become: yes

- name: Doing Control Machine pre-checks
  hosts: control_machine
  pre_tasks:
    - name: Running nuc-pre-check role
      include_role:
        name: installation/nuc-pre-check
      when: not skip_molecule_task|bool

- name: Install Hand software on Ubuntu server laptop
  hosts: server
  pre_tasks:
    - name: Install licence tools
      include_role:
        name: installation/install_licence_tools
      when: '"binary" in image'

    - name: check if customer_key is provided and not false
      when: customer_key is defined and customer_key | length > 0
      set_fact:
        use_aws: true
    
    - name: Set container name for hand and arm
      when: "'arm_' in product"
      set_fact:
        container_name: "{{ container_name }}_arm"

    - name: Set container name for hand and glove
      when: "'glove_' in product"
      set_fact:
        container_name: "{{ container_name }}_glove"

    - name: Add IP address of all hosts to all hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^{{ item }}.*$'
        line: "{{ item }} {{ hostvars[item].ansible_host }}"
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.all }}"
      become: yes

  roles:
    - { role: products/common/get-system-variables }
    - { role: products/hand-e/server/deploy }
    - { role: products/common/dolphin-icons, when: ansible_distribution_release|string == 'focal' or ansible_distribution_release|string == 'jammy'}

- name: Install Hand software on control machine
  hosts: control_machine
  pre_tasks:
    - name: Deploy conda on control machine
      include_role:
        name: installation/conda_deploy

    - name: check if customer_key is provided and not false
      when: customer_key is defined and customer_key | length > 0
      set_fact:
        use_aws: true
    
    - name: Running playbook setup role
      include_role:
        name: installation/playbook_setup
      when: not skip_molecule_task|bool

    - name: Set container name for hand and arm
      when: "'arm_' in product"
      set_fact:
        container_name: "{{ container_name }}_arm"

    - name: Set container name for hand and glove
      when: "'glove_' in product"
      set_fact:
        container_name: "{{ container_name }}_glove"

    - name: Add IP address of all hosts to all hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^{{ item }}.*$'
        line: "{{ item }} {{ hostvars[item].ansible_host }}"
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.all }}"
      become: yes

  roles:
    - { role: products/common/get-system-variables }
    - { role: products/hand-e/control_machine/deploy }
