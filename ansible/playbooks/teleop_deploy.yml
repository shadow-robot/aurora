---
- name: Set server hostname variable and validate input variables
  hosts: server
  connection: local
  gather_facts: yes
  pre_tasks:
    - name: Unset arm_servo if haptx
      when: "'haptx' in image"
      set_fact:
        arm_servo: false

    - name: include products/common/validation role
      include_role:
        name: products/common/validation
      vars:
        playbook: "teleop_deploy"
    
    - name: Install common tools
      include_role:
        name: installation/install_common_tools
      when: skip_molecule_task is not defined
    
    - name: Install licence tools
      include_role:
        name: installation/install_licence_tools
      when: '"binary" in image'
  tasks:
    - name: Extract hostname from server
      set_fact:
        ansible_host: "{{ ansible_hostname }}"
      when: skip_molecule_task is not defined

- name: Add IP address of all hosts to computer that is running Ansible
  hosts: server
  connection: local
  gather_facts: yes
  tasks:
    - name: Add lines in /etc/hosts in computer that is running Ansible
      blockinfile:
        dest: /etc/hosts
        state: present
        block: |
          {{ item }} {{ hostvars[item].ansible_host }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ hostvars[item].ansible_host }}"
        # Allowing Ansible to modify /etc/hosts inside Docker containers
        unsafe_writes: yes
      with_items: "{{ groups.all }}"
      when: hostvars[item].ansible_host is defined
      become: yes

    - name: Delete previously known hosts to avoid an ssh error
      shell: |
        ssh-keygen -q -f "/home/{{ ansible_user_id }}/.ssh/known_hosts" -R {{ hostvars[item].ansible_host }}
        ssh-keygen -q -f "/home/{{ ansible_user_id }}/.ssh/known_hosts" -R '{{ item }}'
      changed_when: false
      ignore_errors: true
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.all | difference([inventory_hostname]) }}"

- name: Install Python 3
  import_playbook: ./install_python3.yml

- name: Check which hosts are available for teleop system Install
  hosts: all
  gather_facts: no
  tasks:
    - name: ping all the machines
      ping:
  become: yes

- name: Install Teleop software on Ubuntu teleop server laptop
  hosts: server
  pre_tasks:
    - name: check if customer_key is provided
      when: customer_key is defined and customer_key | length > 0
      set_fact:
        use_aws: true

    - name: Add IP address of all hosts to all hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^{{ item }}.*$'
        line: "{{ item }} {{ hostvars[item].ansible_host }}"
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.all }}"
      become: yes

  roles:
    - { role: products/common/get-system-variables }
    - { role: products/teleop/server/deploy }
    - { role: products/common/dolphin-icons, when: ansible_distribution_release|string == 'focal' or ansible_distribution_release|string == 'jammy'}

- name: Install Teleop simulation software on Ubuntu teleop server laptop
  hosts: simulation
  pre_tasks:
    - name: Unset arm_servo if haptx
      when: "'haptx' in image"
      set_fact:
        arm_servo: false

    - name: Install common tools
      include_role:
        name: installation/install_common_tools
      when: skip_molecule_task is not defined

    - name: Install licence tools
      include_role:
        name: installation/install_licence_tools
      when: '"binary" in image'

    - name: check if customer_key is provided
      when: customer_key is defined and customer_key | length > 0
      set_fact:
        use_aws: true

  roles:
    - { role: products/common/get-system-variables }
    - { role: products/teleop/server/deploy }
    - { role: products/common/dolphin-icons, when: ansible_distribution_release|string == 'focal' or ansible_distribution_release|string == 'jammy'}

- name: Install Teleop software on control machine
  hosts: control_machine
  pre_tasks:
    - name: Install common tools
      include_role:
        name: installation/install_common_tools
      when: skip_molecule_task is not defined

    - name: Add IP address of all hosts to all hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^{{ item }}.*$'
        line: "{{ item }} {{ hostvars[item].ansible_host }}"
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.all }}"
      become: yes

  roles:
    - { role: products/common/get-system-variables }
    - { role: products/teleop/control_machine/deploy }

- name: Inform user for reboot
  hosts: 127.0.0.1
  gather_facts: no
  tasks:
    - name: Reboot message
      debug:
        msg:
          - "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
          - "!!! Please restart the server laptop and re-run this script to finalize the installation. Ignore if you have already done  this !!!"
          - "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
