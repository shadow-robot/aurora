---
- name: Install Python 3
  import_playbook: ./install-python3.yml

- name: Install software based on external parameters
  hosts: install-software
  pre_tasks:

    - name: Initialize list of software
      set_fact:
        software_list: "{{ software | default([]) }}"


  tasks:
    - name: "PLAYBOOK SUDO=NO, TASK SUDO=NO"
      command: whoami
      register: whoami_output
      sudo: no
    - debug: var=whoami_output.stdout
    - debug: var=ansible_ssh_user
      sudo: no
    - debug: var=ansible_user_id
      sudo: no

    - name: "PLAYBOOK SUDO=NO, TASK SUDO=YES"
      command: whoami
      register: whoami_output
      sudo: yes
    - debug: var=whoami_output.stdout
    - debug: var=ansible_ssh_user
      sudo: yes
    - debug: var=ansible_user_id
      sudo: yes

- name: Testing variables with SUDO=YES
  hosts: "*"
  sudo: yes

  tasks:
    - name: "PLAYBOOK SUDO=YES, TASK SUDO=NO"
      command: whoami
      register: whoami_output
      sudo: no
    - debug: var=whoami_output.stdout
    - debug: var=ansible_ssh_user
      sudo: no
    - debug: var=ansible_user_id
      sudo: no

    - name: "PLAYBOOK SUDO=YES, TASK SUDO=YES"
      command: whoami
      register: whoami_output
      sudo: yes
    - debug: var=whoami_output.stdout
    - debug: var=ansible_ssh_user
      sudo: yes
    - debug: var=ansible_user_id
      sudo: yes

  roles:
    - {role: installation/docker, when: "'docker' in software_list" }
    - {role: installation/nvidia-docker, when: "'nvidia-docker' in software_list"}
    - {role: installation/openvpn-server, when: "'openvpn-server' in software_list"}
    - {role: installation/aws-cli, when: "'aws-cli' in software_list"}
    - {role: installation/pycharm, when: "'pycharm' in software_list"}
    - {role: installation/qtcreator, when: "'qtcreator' in software_list"}
    - {role: installation/vscode, when: "'vscode' in software_list"}
    - {role: installation/steamvr, when: "'steamvr' in software_list"}
