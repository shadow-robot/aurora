# Copyright 2022-2023 Shadow Robot Company Ltd.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.

---
- name: Include installation/docker role
  include_role:
    name: installation/docker
  vars:
    skip_nvidia: true

- name: Set chrony server ip
  set_fact:
    chrony_server_ip: "{{ groups['server'][0] }}"
  when: groups['server'] is defined

- name: Include installation/aws-cli role
  include_role:
    name: installation/aws-cli-v2
  when: not skip_molecule_task|bool

- name: Include installation/chrony-client role
  include_role:
    name: installation/chrony-client

- name: Include docker/docker-image role
  include_role:
    name: docker/docker-image
  vars:
    skip_nvidia: true

- name: Include products/common/record-hand-data role
  include_role:
    name: products/common/record-hand-data
  when: record_data

- name: Set server hostname
  set_fact:
    server_hostname: "{{ hostvars[groups['server'][0]]['ansible_host'] }}"
  when: groups['server'] is defined

- name: Arm ip setup script name
  set_fact:
    setup_script: arm-ip-setup.sh
  when: arm_ip_left!="" or arm_ip_right!=""

- name: Check if the ssh public key has been generated and copied to temp_ssh_keys_path folder on machine running Ansible (server laptop)
  stat:
    path: "{{ temp_ssh_keys_path }}.pub"
  register: ssh_result
  delegate_to: 127.0.0.1

- name: Check if the ssh private key has been generated and copied to temp_ssh_keys_path folder on machine running Ansible (server laptop)
  stat:
    path: "{{ temp_ssh_keys_path }}"
  register: ssh_result_private
  delegate_to: 127.0.0.1

- name: Ensure the .ssh folder exists
  file:
    path: "{{ user_folder }}/.ssh/"
    mode: '700'
    state: directory

- name: Copy SSH public key from server to control machine (if it exists in server laptop)
  copy:
    src: "{{ temp_ssh_keys_path }}.pub"
    dest: "{{ ssh_keys_path }}.pub"
    mode: '644'
  when: ssh_result.stat.exists
  changed_when: false
  become: yes

- name: Copy SSH private key from server to control machine (if it exists in server laptop)
  copy:
    src: "{{ temp_ssh_keys_path }}"
    dest: "{{ ssh_keys_path }}"
    mode: '644'
  when: ssh_result_private.stat.exists
  changed_when: false
  become: yes

- name: Register SSH public key with current user on the control machine
  authorized_key:
    user: "{{ user }}"
    key: "{{ lookup('file', '{{ temp_ssh_keys_path }}.pub') }}"
    state: present
  when: ssh_result.stat.exists
  changed_when: false
  become: yes

- name: Include products/common/docker-container role
  include_role:
    name: products/common/docker-container
  vars:
    ros_master: "{{ server_hostname }}"
    nvidia_docker: false

- name: Include products/common/arm-interfaces role
  include_role:
    name: products/common/arm-interfaces
  when: "'arm_' in product"

- name: Creating NUC arm ip setup script
  template:
    src: ../../../common/resources/templates/scripts/setup-arm-ips.j2
    dest: "{{ user_folder }}/{{ setup_script }}"
    mode: '755'
  when: arm_ip_left!="" or arm_ip_right!=""

- name: Include products/common/hand_config role
  include_role:
    name: products/common/hand_config
  when: not skip_molecule_task|bool

- name: Copying  NUC arm ip setup script into docker container
  changed_when: false
  shell: "docker cp {{ user_folder }}/{{ setup_script }} {{ container_name }}:{{ setup_directory }}/{{ setup_script }}"
  become: yes
  when: arm_ip_left!="" or arm_ip_right!=""

- name: Include products/common/setup_nuc_ssh_key role
  include_role:
    name: products/common/setup_nuc_ssh_key
