# Copyright 2022 Shadow Robot Company Ltd.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.

---
- name: Create the shadow_hand_launcher_folder
  file:
    path: "{{ shadow_hand_launcher_folder }}"
    state: directory

- name: Check response exists
  block:
    - name: Set variables
      set_fact: 
        local_response_path: "{{ user_folder }}/.shadow_launcher_app_{{ container_name }}/.response"
        container_response_path: "/usr/local/bin/.response"
    - name: Copy response file
      shell: "docker cp {{ container_name }}:{{ container_response_path }} {{ local_response_path }}"
      ignore_errors: yes
    - name: Check file exists
      stat:
        path: "{{ local_response_path }}"
      register: response_file
  when: "'binary' in image"

- name: Check if /run/user/1000 folder exists in the docker image
  shell: "docker image history --no-trunc {{ full_image_name }} | grep XDG_RUNTIME_DIR | wc -l"
  register: xdg_check
  changed_when: false

- name: Creating the container which will execute setup script in terminator when started
  when: "not nvidia_docker|bool and terminator|bool and setup_script | length > 0"
  include_tasks: create-container/with-setup-with-terminator.yml

- name: Creating the container which will execute setup script when started without terminator
  when: "not nvidia_docker|bool and not terminator|bool and setup_script | length > 0"
  include_tasks: create-container/with-setup-no-terminator.yml

- name: Creating the container which will just start a terminator (no setup script)
  when: "not nvidia_docker|bool and terminator|bool and setup_script | length == 0"
  include_tasks: create-container/no-setup-with-terminator.yml

- name: Creating the container which will not even start terminator (no setup script)
  when: "not nvidia_docker|bool and not terminator|bool and setup_script | length == 0"
  include_tasks: create-container/no-setup-no-terminator.yml

- name: Creating the container which will execute setup script in terminator when started (NVIDIA)
  when: "nvidia_docker|bool and terminator|bool and setup_script | length > 0"
  include_tasks: create-container/nvidia-with-setup-with-terminator.yml

- name: Move response back to container
  shell: "docker cp {{ local_response_path }} {{ container_name }}:{{ container_response_path }}"
  when:
    - "'binary' in image"
    - response_file.stat.exists

- name: if run/user/1000 doesn't exist, then create it inside the container
  import_tasks: modify-container.yml
  vars:
    modify_script_name: "create_run_user_1000.sh"
    modify_script_commands: "sudo mkdir -p /run/user/1000;sudo chmod 0700 /run/user/1000;sudo chown 1000:1000 /run/user/1000;export XDG_RUNTIME_DIR=/run/user/1000"
  when: xdg_check.stdout=="0"

- name: Create ssh folder inside the container
  import_tasks: modify-container.yml
  vars:
    modify_script_name: "create_ssh_folder.sh"
    modify_script_commands: "mkdir -p /home/user/.ssh"
  when: "'arm_' in product"

- name: Checking out PRs and branches if pr_branches list has been specified
  block:
  - name: Creating the pull_pr_branches_and_catkin_make bash script for testing for these branches {{ pr_branches }}
    template:
      src: ../../../common/resources/templates/scripts/pull-pr-branches-and-catkin-make.j2
      dest: "{{ shadow_hand_launcher_folder }}/pull_pr_branches_and_catkin_make.sh"
      mode: '755'
    vars:
      pr_branches_value: "{{ pr_branches }}"

  - name: Copying the pull pull_pr_branches_and_catkin_make bash script into docker container
    changed_when: false
    shell: "docker cp {{ shadow_hand_launcher_folder }}/pull_pr_branches_and_catkin_make.sh {{ container_name }}:/tmp/pull_pr_branches_and_catkin_make.sh"
    become: yes

  - name: Copying the pull github_ssh_private_key into docker container
    changed_when: false
    shell: "docker cp /home/{{ user }}/.ssh/id_rsa {{ container_name }}:/home/user/.ssh/id_rsa"
    become: yes

  - name: Check-out any branches inside docker container and catkin_make
    import_tasks: modify-container.yml
    vars:
      modify_script_name: "pull_pr_branches_and_catkin_make.sh"
      modify_script_commands: "/tmp/pull_pr_branches_and_catkin_make.sh"
  when: pr_branches is defined and pr_branches | length > 0

- name: Pulling latest hand_configurations
  import_tasks: modify-container.yml
  vars:
    modify_script_name: "pull_sr_hand_config.sh"
    modify_script_commands: "if roscd sr_hand_config; then roscd sr_hand_config && git remote set-url origin https://github.com/shadow-robot/sr_hand_config && git pull; else roscd sr_config && git remote set-url origin https://github.com/shadow-robot/sr-config && git pull; fi"
