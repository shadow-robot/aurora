---
- name: Set shared volumes
  set_fact:
    shared_volumes: "{{ common_shared_volumes + container_type_shared_volumes + custom_shared_volumes }}"

- name: Find out if we should record all data from these hands
  set_fact:
    record_hand_data: "enabled"
  when: record_data

- name: set pull varaible
  set_fact: pull_var=no
  when: local_image

- name: Creating the Nvidia container which will execute setup script when started inside a terminator window
  changed_when: false
  community.docker.docker_container:
    name: "{{ container_name }}"
    image: "{{ full_image_name }}"
    state: present
    recreate: yes
    pull: "{{ pull_var|bool }}"
    env:
      verbose: "true"
      QT_X11_NO_MITSHM: "1"
      LOCAL_USER_ID: "{{ id.stdout }}"
      DISPLAY: "{{ lookup('env','DISPLAY') }}"
      ROS_MASTER_URI: "http://{{ ros_master }}:11311"
      NVIDIA_VISIBLE_DEVICES: "all"
      NVIDIA_DRIVER_CAPABILITIES: "all"
      arm_ips: "{{ arm_ip_right }}_{{ arm_ip_left }}"
      XDG_RUNTIME_DIR: "/run/user/1000"
      SR_RECORD_HAND_DATA: "{{ record_hand_data }}"
    network_mode: "host"
    pid_mode: "host"
    privileged: yes
    interactive: yes
    security_opts:
    - "seccomp: unconfined"
    ulimits:
    - "core: -1"
    volumes: "{{ shared_volumes }}"
    command: >
      bash -c "echo /usr/local/lib/x86_64-linux-gnu | sudo tee /etc/ld.so.conf.d/glvnd.conf && sudo ldconfig &&
      terminator {{ term_args }} -T '{{ container_terminal_title }}' -x bash -c '[[ -e {{ setup_directory }}/{{ setup_script }} ]] && {{ setup_directory }}/{{ setup_script }} && bash || bash'"
    container_default_behavior: compatibility
    device_requests:
      - # Add nVidia GPUs to this container
        driver: nvidia
        count: -1 
        capabilities:
          - ['gpu','nvidia']
