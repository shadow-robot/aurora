---
- name: Set container_type_shared_volumes
  set_fact:
    container_type_shared_volumes:
      - "{{ user_folder }}/.Xauthority:/home/user/.Xauthority"

- name: Set shared volumes
  set_fact:
    shared_volumes: "{{ common_shared_volumes + container_type_shared_volumes + custom_shared_volumes }}"

- name: Find out if we should record all data from these hands
  set_fact:
    record_hand_data: "yes"
  when: config_branch in bag_all_data_from

- name: Print debug
  ansible.builtin.debug:
    msg: config_branch {{ config_branch }} in bag_all_data_from {{ bag_all_data_from }} record_hand_data {{ record_hand_data }}

- name: Set NUC IP address and username for SSH
  set_fact:
    nuc_username: "{{ hostvars[groups['control_machine'][0]]['ansible_user'] }}"
    nuc_address: "{{ groups['control_machine'][0] }}"
  when: groups['control_machine'] is defined


- name: Creating the container with no terminator and no setup
  changed_when: false
  community.docker.docker_container:
    name: "{{ container_name }}"
    image: "{{ full_image_name }}"
    state: present
    recreate: yes
    pull: yes
    env:
      verbose: "true"
      interface: "{{ ethercat_right_hand }}"
      interface_left: "{{ ethercat_left_hand }}"
      QT_X11_NO_MITSHM: "1"
      LOCAL_USER_ID: "{{ id.stdout }}"
      DISPLAY: "{{ lookup('env','DISPLAY') }}"
      ROS_MASTER_URI: "http://{{ ros_master }}:11311"
      arm_ips: "{{ arm_ip_right }}_{{ arm_ip_left }}"
      XDG_RUNTIME_DIR: "/run/user/1000"
      record_hand_data: "{{ record_hand_data }}"
    network_mode: "host"
    pid_mode: "host"
    privileged: yes
    interactive: yes
    security_opts:
    - "seccomp: unconfined"
    ulimits:
    - "core: -1"
    volumes: "{{ shared_volumes }}"
    command: bash
    container_default_behavior: compatibility
  become: yes
