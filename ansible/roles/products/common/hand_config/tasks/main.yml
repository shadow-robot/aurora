# Copyright 2022 Shadow Robot Company Ltd.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.

---
- name: Create temporary script file
  file:
    path: /tmp/update_hand_config.sh
    state: touch
    mode: u=rwx,g=rwx,o=rwx

- name: Add content to script file
  copy:
    dest: /tmp/update_hand_config.sh
    content: |
        #!/usr/bin/env bash

        # Used to update hand config.
        cd ~/projects/shadow_robot/base_deps/src/sr_hand_config
        git_branch=$(git rev-parse --abbrev-ref HEAD | xargs)

        if [[ `git status --porcelain` ]]; then
          file_changed=true
        else
          file_changed=false
        fi

        git_pull_with_timeout() {
          # Colours for echo
          ORANGE='\033[0;33m'
          GREEN='\033[0;32m'
          NC='\033[0m' # No Color
          timeout 5s git pull
          retval=$?
          if [ $retval -eq 124 ]; then
            echo -e "${ORANGE}WARNING: git pull timed out after five seconds, NOT pulling latest hand calibration${NC}"
          elif [ $retval -eq 0 ]; then
            echo -e "${GREEN}git pull completed successfully${NC}"
          else
            echo -e "${ORANGE}WARNING: git pull failed with an unexpected error: ${retval}${NC}"
          fi
        }

        git remote set-url origin https://github.com/shadow-robot/sr_hand_config
        if [[ $git_branch == "master" && $file_changed == false ]]; then
          echo "Pulling the latest sr_hand_config changes."
          git_pull_with_timeout
        elif [[ $git_branch != "master" && $file_changed == false ]]; then
          echo "Pulling the latest sr_hand_config changes to master branch then switching back to branch $git_branch"
          git checkout master --quiet 1> /dev/null
          git_pull_with_timeout
          git checkout $git_branch --quiet 1> /dev/null
        else
          echo "You have un-commited changes in sr_hand_config, not pulling any changes automatically."
        fi
        cd ~

- name: Move script folder over
  shell: "docker cp /tmp/update_hand_config.sh {{ container_name }}:/bin/update_hand_config.sh"
