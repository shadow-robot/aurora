#jinja2: trim_blocks:False
#!/bin/bash

NUC_USERNAME={{ nuc_username }}
NUC_ADDRESS={{ nuc_address }}
LOCAL_IP={{ server_ip }}
USER={{ user }}
HOSTNAME=$(hostname)
CLOSE_NUC_PROCESSES={{ close_nuc_processes | lower}}
RED='\033[0;31m'
NC='\033[0m' # No Color


function check_storage_available {
    # Get the current disk usage as a percentage
    disk_usage=$(df -h --output=pcent / | tail -n 1 | tr -d '% ')

    printf "Disk usage is at $disk_usage%%\n"
    if [[ $disk_usage -gt 85 ]]; then  # If storage is 85% or higher it will print a warning
        printf "${RED}Warning: Please free up some space.${NC}\n"
    fi
}

function check_cpu_and_mem_usage {
    # Get the current CPU and memory usage
    CPU=$(top -b -n 1 | grep "Cpu(s)" | awk '{print $2 + $4}')
    MEM=$(free | grep Mem | awk '{print $3/$2 * 100.0}')
    CPU_THRESHOLD=80
    MEM_THRESHOLD=80

    # Check if usage exceeds the thresholds
    if (( $(echo "$CPU > $CPU_THRESHOLD" | bc -l) )) || (( $(echo "$MEM > $MEM_THRESHOLD" | bc -l) )); then
        # If usage is high, print a warning message
        printf "${RED}Warning: High CPU or memory usage detected!${NC}\n"
    fi
    printf "CPU usage: $CPU%%\n"
    printf "Memory usage: $MEM%%\n"
}

function check_hosts_file {
    ip_address="$1"
    hostname="$2"
    grep -q -E "^$ip_address\s+$hostname\s*$" /etc/hosts
    if [[ $? -eq 0 ]]; then
        printf "The IP address $ip_address and hostname $hostname exist in /etc/hosts.\n"
    else
        printf "${RED}The IP address $ip_address and hostname $hostname do not exist in /etc/hosts.${NC}\n"
    fi
}

function check_nuc_connection {
    if ssh -q -o ConnectTimeout=5 -o BatchMode=yes $NUC_USERNAME@$NUC_ADDRESS "echo 2>&1" >/dev/null; then
        printf "$NUC_USERNAME@$NUC_ADDRESS is reachable via SSH.\n"
    else
        printf "${RED}$NUC_USERNAME@$NUC_ADDRESS is not reachable via SSH.${NC}\n"
        return 1
    fi

    check_hosts_file $NUC_ADDRESS nuc-control

    return 0
}

function run_system_test {
    user=$1
    address=$2
    printf "Running system test on $user:$address\n"
    check_storage_available
    check_cpu_and_mem_usage
}


run_system_test $USER $LOCAL_IP

if $CLOSE_NUC_PROCESSES; then
check_nuc_connection
if ping -c 1 $NUC_ADDRESS &> /dev/null; then
    ssh -X $NUC_USERNAME@$NUC_ADDRESS 'bash -s' <<ENDSSH
        $(declare -f $(compgen -A function))
        $(declare -p USER LOCAL_IP NUC_ADDRESS NUC_USERNAME HOSTNAME CLOSE_NUC_PROCESSES RED NC)
        run_system_test $NUC_USERNAME $NUC_ADDRESS
        check_hosts_file $LOCAL_IP $HOSTNAME
ENDSSH
fi
fi

printf "\n Press enter key to close window"
read