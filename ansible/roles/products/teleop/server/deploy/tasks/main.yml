# Copyright 2022-2023 Shadow Robot Company Ltd.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.

---
- name: Include products/common/clear-icons role
  include_role:
    name: products/common/clear-icons
  when: not skip_molecule_task|bool

- name: Set NUC IP address and username for SSH
  set_fact:
    nuc_username: "{{ hostvars[groups['control_machine'][0]]['ansible_user'] }}"
    nuc_address: "{{ groups['control_machine'][0] }}"
  when: groups['control_machine'] is defined

- name: Set server ip
  set_fact:
    server_ip: "{{ groups['server'][0] }}"
  when: groups['server'] is defined

- name: Setup script names
  set_fact:
    setup_script: teleop-server-setup.sh
    upgrade_script: "upgrade_image.sh"

- name: Include installation/aws-cli role
  include_role:
    name: installation/aws-cli-v2
  when: not skip_molecule_task|bool

- name: Include installation/docker role
  include_role:
    name: installation/docker

- name: Include installation/lxml role
  include_role:
    name: installation/lxml

- name: Include installation/terminator role
  include_role:
    name: installation/terminator

- name: Include installation/nvidia-docker role
  include_role:
    name: installation/nvidia-docker
  when: nvidia_docker | bool

- name: Set chrony allowed network
  set_fact:
    chrony_allowed_network: "0/0"
  when: groups['server'] is defined

- name: Include installation/chrony-server role
  include_role:
    name: installation/chrony-server
  when: groups['server'] is defined

- name: Include installation/shadow_glove_driver role
  include_role:
    name: installation/shadow_glove_driver
  when: glove == "shadow_glove" and real_glove|bool and not skip_molecule_task|bool

- name: Include docker/docker-image role
  include_role:
    name: docker/docker-image

- name: Get screen width
  shell: "xrandr --current | grep '*' | awk '{print $1}' | uniq | cut -d 'x' -f1"
  register: xrandr_width
  changed_when: xrandr_width.rc != 0

- name: Get screen height
  shell: "xrandr --current | grep '*' | awk '{print $1}' | uniq | cut -d 'x' -f2"
  register: xrandr_height
  changed_when: xrandr_height.rc != 0

- name: Set terminator dimensions and locations
  set_fact:
    term_width: "{{ ((xrandr_width.stdout|int)*0.26)|int }}"
    term_height: "{{ ((xrandr_height.stdout|int)*0.37)|int }}"
    term_x: "{{ ((xrandr_width.stdout|int)*0.10)|int }}"
    term_y: 0
    term_y_correction: 58
    term_1: "{{ term_width }}x{{ term_height }}+{{ term_x }}+{{ term_y }}"
    term_2: "{{ term_width }}x{{ term_height }}+{{ term_x }}+{{ term_y|int + term_height|int +term_y_correction|int }}"
    term_3: "{{ term_width }}x{{ term_height }}+{{ term_x|int + term_width|int }}+{{ term_y }}"
    term_4: "{{ term_width }}x{{ term_height }}+{{ term_x|int + term_width|int }}+{{ term_y|int + term_height|int +term_y_correction|int }}"
    term_5: "{{ term_width }}x{{ term_height }}+{{ term_x|int + 2*term_width|int }}+{{ term_y }}"
    term_6: "{{ term_width }}x{{ term_height }}+{{ term_x|int + 2*term_width|int }}+{{ term_y|int + term_height|int +term_y_correction|int }}"

- name: Ensures that Desktop folder exists
  file:
    path: "{{ desktop_path }}"
    mode: '755'
    state: directory

- name: Include products/common/docker-container role
  include_role:
    name: products/common/docker-container
  vars:
    container_terminal_title: "Teleop Server Container"
    term_args: "--geometry {{ term_1 }}"

- name: Include docker/aws role
  include_role:
    name: docker/aws
  when: use_aws|bool

- name: Include products/common/save-logs-icons role
  include_role:
    name: products/common/save-logs-icons

- name: Include products/teleop/server/desktop-icons role
  include_role:
    name: products/teleop/server/desktop-icons

- name: Ensure the .ssh folder exists
  file:
    path: "{{ user_folder }}/.ssh/"
    mode: '700'
    state: directory
  when: groups['server'] is defined

- name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)
  openssh_keypair:
    path: "{{ ssh_keys_path }}"
  when: groups['server'] is defined

- name: Evaluating the SSH agent
  shell: "eval $(ssh-agent)"
  changed_when: false
  when: groups['server'] is defined

- name: Adding the ssh identity
  shell: "ssh-add {{ ssh_keys_path }}"
  changed_when: false
  when: not skip_molecule_task|bool and groups['server'] is defined

- name: Make a copy of SSH public key to a /tmp/ folder for copying to other machines
  copy:
    src: "{{ ssh_keys_path }}.pub"
    dest: "{{ temp_ssh_keys_path }}.pub"
  changed_when: false
  when: not skip_molecule_task|bool and groups['server'] is defined

- name: Make a copy of SSH private key to a /tmp/ folder for copying to other machines
  copy:
    src: "{{ ssh_keys_path }}"
    dest: "{{ temp_ssh_keys_path }}"
  changed_when: false
  when: not skip_molecule_task|bool and groups['server'] is defined

- name: Copying ssh key pair into docker container
  changed_when: false
  shell: "docker cp {{ ssh_keys_path }} {{ container_name }}:/tmp/."
  become: yes
  when: groups['server'] is defined

- name: if glove==shadow_glove and real_vive==true, set use_steamvr=true (override simulation scenario with real_vive)
  set_fact:
    use_steamvr: true
  when: glove=="shadow_glove" and real_vive|bool

- name: if glove==haptx and real_vive==true, set use_steamvr=false (override real robots scenario with haptx)
  set_fact:
    use_steamvr: false
  when: glove=="haptx" and real_vive|bool

- name: Creating teleop-server setup script
  template:
    src: ../../../common/resources/templates/scripts/setup-hand.j2
    dest: "{{ shadow_hand_launcher_folder }}/{{ setup_script }}"
    mode: '755'

- name: Copying teleop-server setup script into docker container
  changed_when: false
  shell: "docker cp {{ shadow_hand_launcher_folder }}/{{ setup_script }} {{ container_name }}:{{ setup_directory }}/{{ setup_script }}"
  become: yes

- name: Udev rules for vive
  get_url:
    url: https://raw.githubusercontent.com/shadow-robot/sr-build-tools/master/docker/utils/steam_udev/60-HTC-Vive-perms-Ubuntu.rules
    dest: /etc/udev/rules.d/60-HTC-Vive-perms-Ubuntu.rules
    mode: '0644'
  become: yes

- name: Udev rules for steam
  get_url:
    url: https://raw.githubusercontent.com/shadow-robot/sr-build-tools/master/docker/utils/steam_udev/99-steam-perms.rules
    dest: /etc/udev/rules.d/99-steam-perms.rules
    mode: '0644'
  become: yes

- name: Udev rules for pedal
  get_url:
    url: https://raw.githubusercontent.com/shadow-robot/sr_teleop_devices/noetic-devel/sr_pedal/90-VEC-USB-Footpedal.rules
    dest: /etc/udev/rules.d/90-VEC-USB-Footpedal.rules
    mode: '0644'
  become: yes

- name: Udev rules for hazard light
  get_url:
    url: https://raw.githubusercontent.com/shadow-robot/sr_teleop_devices/noetic-devel/sr_hazard_light/90-hazard-light.rules
    dest: /etc/udev/rules.d/90-hazard-light.rules
    mode: '0644'
  become: yes

- name: Reload udev rules
  shell: udevadm control --reload-rules && udevadm trigger
  changed_when: false
  become: yes
  when: not skip_molecule_task|bool

- name: Creating upgrade script
  template:
    src: ../../../common/resources/templates/scripts/upgrade_image.j2
    dest: "{{ shadow_hand_launcher_folder }}/{{ upgrade_script }}"
    mode: '755'
  when: upgrade_check|bool

- name: Include installation/teamviewer role
  include_role:
    name: installation/teamviewer