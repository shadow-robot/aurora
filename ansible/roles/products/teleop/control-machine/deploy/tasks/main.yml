---
- name: Setup script name
  set_fact:
    setup_script: control-machine-setup.sh

- name: Include installation/docker role
  include_role:
    name: installation/docker

- name: Include docker/docker-image role
  include_role:
    name: docker/docker-image

- name: Include docker/aws role
  include_role:
    name: docker/aws
  when: use_aws|bool

- name: Set server hostname
  set_fact:
    server_hostname: "{{ hostvars[groups['server'][0]]['ansible_host'] }}"
  when: groups['server'] is defined

- name: Include products/common/docker-container role
  include_role:
    name: products/common/docker-container
  vars:
    ros_master: "{{ server_hostname }}"

- name: Check if there is an interface file
  stat:
    path: /etc/network/interfaces
  register: stat_result

- name: In case enp interface doesn't exist, use eth0
  set_fact:
    ur_interface: 'eth0'
  when: "'enp' not in ansible_interfaces"

- name: If an enp interface exists, use the first one for ur_interface
  set_fact:
    ur_interface: "{{ ansible_interfaces | select('match','enp.*') | list | first }}"
  when: "'enp' in ansible_interfaces"

- name: Add network setup to control machine
  become: yes
  when: ur_interface | length > 0
  blockinfile:
    path: /etc/network/interfaces
    backup: yes
    block: |
      auto {{ ur_interface }}
      iface {{ ur_interface }} inet static
        address 192.168.1.100
        netmask 255.255.255.0

- name: Check if the ssh public key has been generated in .ssh/ folder on machine running Ansible (teleop server)
  stat:
    path: "{{ user_folder }}/.ssh/id_rsa.pub"
  register: ssh_result
  delegate_to: 127.0.0.1

- name: Copy SSH public key from server to control machine (if it exists in teleop server)
  copy:
    src: "{{ user_folder }}/.ssh/id_rsa.pub"
    dest: ".ssh/id_rsa.pub"
    mode: '664'
  when: ssh_result.stat.exists
  changed_when: false

- name: Register SSH public key with current user on the control machine
  authorized_key:
    user: "{{ user }}"
    key: "{{ lookup('file', '{{ user_folder }}/.ssh/id_rsa.pub') }}"
    state: present
  when: ssh_result.stat.exists
  changed_when: false

- name: Creating control-machine setup script
  template:
    src: ../../../common/resources/templates/scripts/setup-hand.j2
    dest: "{{ shadow_hand_launcher_folder }}/{{ setup_script }}"
    mode: '755'

- name: Copying control-machine setup script into docker container
  changed_when: false
  shell: "docker cp {{ shadow_hand_launcher_folder }}/control-machine-setup.sh {{ container_name }}:{{ setup_directory }}/{{ setup_script }}"
  become: yes
