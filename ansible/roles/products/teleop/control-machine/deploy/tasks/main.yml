---
- name: Creating the container
  docker_container:
    name: "{{ container_name }}"
    image: "{{ full_image_name }}"
    state: present
    recreate: yes
    pull: yes
    env:
      verbose: "true"
      interface: "{{ ethercat_interface }}"
      QT_X11_NO_MITSHM: "1"
      LOCAL_USER_ID: "{{ id.stdout }}"
      DISPLAY: :0
      # ROS_MASTER_URI: "http://'{{ groups['control_machine']['ansible_default_ipv4']['address'] }}':11311"
    network_mode: "host"
    privileged: yes
    interactive: yes
    volumes: /tmp/.X11-unix:/tmp/.X11-unix[rw]
    command: "/bin/bash"
  become: yes

- name: Check if there is an interface file
  stat:
    path: /etc/network/interfaces
  register: stat_result

- name: Check if network interface is the right one
  become: yes
  when: stat_result.stat.exists == True
  find:
    paths: /etc/network/interfaces
    patterns: "{{ ansible_interfaces | select('match','enp.*') | list | first }}"
    use_regex: true
  register: ur_interface

- name: Add network setup to control machine
  become: yes
  when: ur_interface|length is 0
  blockinfile:
    path: /etc/network/interfaces 
    backup: yes
    block: |
      auto   {{ ansible_interfaces | select('match','enp.*') | list | first }}
      iface {{ ansible_interfaces | select('match','enp.*') | list | first }} inet static
        address 192.168.1.100
        netmask 255.255.255.0


      
