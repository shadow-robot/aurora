---
- name: Creating the container
  changed_when: false
  docker_container:
    name: "{{ container_name }}"
    image: "{{ full_image_name }}"
    state: present
    recreate: yes
    pull: yes
    env:
      verbose: "true"
      interface: "{{ ethercat_interface }}"
      QT_X11_NO_MITSHM: "1"
      LOCAL_USER_ID: "{{ id.stdout }}"
      DISPLAY: :0
      # ROS_MASTER_URI: "http://'{{ groups['control_machine']['ansible_default_ipv4']['address'] }}':11311"
    network_mode: "host"
    privileged: yes
    interactive: yes
    volumes: /tmp/.X11-unix:/tmp/.X11-unix[rw]
    command: "/bin/bash"
  become: yes

- name: Check if there is an interface file
  stat:
    path: /etc/network/interfaces
  register: stat_result

- name: In case enp interface doesn't exist, use eth0
  set_fact:
    ur_interface: 'eth0'
  when: "'enp' not in ansible_interfaces"

- name: If an enp interface exists, use the first one for ur_interface
  set_fact:
    ur_interface: "{{ ansible_interfaces | select('match','enp.*') | list | first }}"
  when: "'enp' in ansible_interfaces"

- name: Add network setup to control machine
  become: yes
  when: ur_interface | length > 0
  blockinfile:
    path: /etc/network/interfaces
    backup: yes
    block: |
      auto {{ ur_interface }}
      iface {{ ur_interface }} inet static
        address 192.168.1.100
        netmask 255.255.255.0
