# Copyright 2022 Shadow Robot Company Ltd.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.

---
- name: Update package lists
  apt:
    update_cache: yes
  become: yes
  changed_when: false

- name: Install needed libs for steamvr
  apt:
    name: "{{ packages }}"
    install_recommends: no
  vars:
    packages:
      - curl
      - ca-certificates
      - lib32gcc1
      - binutils
      - terminator
      - xdg-utils
      - software-properties-common
      - sudo
      - libvulkan1
      - usbutils
      - libcap2-bin
  become: yes

- name: Gather package facts
  package_facts:
    manager: apt

- name: Install libudev0_175 from the internet if absent (18.04)
  apt:
    deb: http://old-releases.ubuntu.com/ubuntu/pool/main/u/udev/libudev0_175-0ubuntu9_amd64.deb
    state: present
  when: '"libudev0" not in ansible_facts.packages'
  become: yes
  when:
    - ansible_distribution|string == 'Ubuntu'
    - ansible_distribution_release|string == 'bionic'
    
- name: Install multiarch-support from the internet
  apt:
    deb: http://archive.ubuntu.com/ubuntu/pool/main/g/glibc/multiarch-support_2.27-3ubuntu1.5_amd64.deb
    state: present
  become: yes
  when:
    - ansible_distribution|string == 'Ubuntu'
    - ansible_distribution_release|string == 'focal'

- name: Install multiarch-support from the internet
  apt:
    deb: http://archive.ubuntu.com/ubuntu/pool/main/g/glibc/multiarch-support_2.27-3ubuntu1.5_amd64.deb
    state: present
  become: yes
  when:
    - ansible_distribution|string == 'Ubuntu'
    - ansible_distribution_release|string == 'jammy'

- name: Install libudev0_175 from the internet if absent (20.04)
  apt:
    deb: http://launchpadlibrarian.net/119461136/libudev0_175-0ubuntu13_amd64.deb
    state: present
  when: '"libudev0" not in ansible_facts.packages'
  become: yes
  when:
    - ansible_distribution|string == 'Ubuntu'
    - ansible_distribution_release|string == 'focal'

- name: Install libudev0_175 from the internet if absent (22.04)
  apt:
    deb: http://launchpadlibrarian.net/119461136/libudev0_175-0ubuntu13_amd64.deb
    state: present
  when: '"libudev0" not in ansible_facts.packages'
  become: yes
  when:
    - ansible_distribution|string == 'Ubuntu'
    - ansible_distribution_release|string == 'jammy'

- name: Install libffi.so.6 from the internet (22.04)
  apt:
    deb: http://mirrors.kernel.org/ubuntu/pool/main/libf/libffi/libffi6_3.2.1-8_amd64.deb
    state: present
  become: yes
  when:
    - ansible_distribution|string == 'Ubuntu'
    - ansible_distribution_release|string == 'focal'

- name: Install libffi.so.6 from the internet (22.04)
  apt:
    deb: http://mirrors.kernel.org/ubuntu/pool/main/libf/libffi/libffi6_3.2.1-8_amd64.deb
    state: present
  become: yes
  when:
    - ansible_distribution|string == 'Ubuntu'
    - ansible_distribution_release|string == 'jammy'

# We need to specify versions that are compatible with the amazon.was.s3_object module
# otherwise the pip module finds the package installed via apt (due to this ROS package dependency
# https://github.com/shadow-robot/common_resources/blob/noetic-devel/sr_utilities_common/package.xml#L44)
# and doesn't install these packages via pip, resulting in the following s3_object task failing.
# This wasn't an issue before we moved to the conda environment, as a more recent version of boto3 was in the requirements.txt for ansible.
# When we moved to conda, the installation of the requirements.txt was removed from the run_ansible.sh script, triggering this issue.
# The versions below are the ones required from https://docs.ansible.com/ansible/latest/collections/amazon/aws/s3_object_module.html
- name: Ensure botocore and boto3 modules are installed and have a recent enough version
  pip:
    executable: "{{ ansible_pip3_executable }}"
    name:
      - boto3>=1.22.0
      - botocore>=1.25.0
    extra_args: "--user"

- name: Downloading steamvr 1.21
  amazon.aws.s3_object:
    aws_access_key: "{{ lookup('env','aws_key') }}"
    aws_secret_key: "{{ lookup('env','aws_secret') }}"
    bucket: shadowrobot.aurora.files
    object: server/steamvr/steamNew.tar.gz
    dest: "{{ user_home_dir }}/steam.tar.gz"
    mode: get

- name: Extracting steamvr
  unarchive:
    src: "{{ user_home_dir }}/steam.tar.gz"
    dest: "{{ user_home_dir }}/"

- name: Removing steamvr.tar.gz file
  file:
    path: "{{ user_home_dir }}/steam.tar.gz"
    state: absent

- name: Fix setcap error in vrstartup.sh
  capabilities:
    path: "{{ user_home_dir }}/.steam/bin/linux64/vrcompositor-launcher"
    capability: cap_sys_nice+eip
    state: present
  become: yes
