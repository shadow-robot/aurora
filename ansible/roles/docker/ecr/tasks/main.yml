---
- name: Gather access key and secret key (Polhemus)
  uri:
    url: "https://5bo8nfkjk0.execute-api.eu-west-2.amazonaws.com/prod"
    method: GET
    body_format: json
    status_code: [200, 202]
    return_content: yes
    headers:
      Content-Type: application/json
      x-api-key: "{{ customer_key }}"
  register: request_result

- name: Configure AWS CLI
  become: true
  expect:
    command: aws configure
    responses:
      AWS Access Key ID: "{{ request_result.json.body.access_key }}"
      AWS Secret Access Key: "{{ request_result.json.body.secret_key }}"
      Default region name: "eu-west-2"
      Default output format: ""
  

- name: ecr docker get-authorization-token
  shell: "aws ecr get-authorization-token --region eu-west-2"
  register: ecr_command

- set_fact:
    ecr_authorization_data: "{{ (ecr_command.stdout | from_json).authorizationData[0] }}"

- set_fact:
    ecr_credentials: "{{ (ecr_authorization_data.authorizationToken | b64decode).split(':') }}"

- name: docker_repository - Log into ECR registry and force re-authorization
  docker_login:
    registry_url: "{{ ecr_authorization_data.proxyEndpoint.rpartition('//')[2] }}"
    username: "{{ ecr_credentials[0] }}"
    password: "{{ ecr_credentials[1] }}"
    reauthorize: yes
  become: yes

# - name: Print request_result
#   debug:
#     msg: "aws configure set aws_access_key_id {{ request_result.json.body.access_key }} && \
#     aws configure set aws_secret_access_key {{ request_result.json.body.secret_key }} && \
#     aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 080653068785.dkr.ecr.eu-west-2.amazonaws.com"
  
# - name: login to AWS
#   shell: aws configure set aws_access_key_id {{ request_result.json.body.access_key }} && \
#     aws configure set aws_secret_access_key {{ request_result.json.body.secret_key }} && \
#     aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 080653068785.dkr.ecr.eu-west-2.amazonaws.com
